<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on Sam Cook</title>
    <link>https://www.samcook.dev/blog/</link>
    <description>Recent content in Blogs on Sam Cook</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Wed, 22 Jul 2020 15:27:05 -0400</lastBuildDate>
    
	<atom:link href="https://www.samcook.dev/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Detecting Credit Card Fraud</title>
      <link>https://www.samcook.dev/blog/ccfraud/</link>
      <pubDate>Wed, 22 Jul 2020 15:27:05 -0400</pubDate>
      
      <guid>https://www.samcook.dev/blog/ccfraud/</guid>
      <description>Photo by Bermix Studio on Unsplash 
  This is a project I worked on to investigate some different methods for detecting credit card fraud&amp;ndash;a classic unbalanced data problem. Feel free to skip around to different sections or straight to the results. I&amp;rsquo;ll also include the code so that you can run it and/or follow along.
Core Ideas Imbalanced datasets are common when trying to solve many problems â€“ spam email classification, customer churn, insurance fraud detection, or in our case, credit card fraud detection.</description>
    </item>
    
    <item>
      <title>Playing around with Sibilant</title>
      <link>https://www.samcook.dev/blog/sibilant/</link>
      <pubDate>Sat, 04 Jul 2020 13:00:47 -0400</pubDate>
      
      <guid>https://www.samcook.dev/blog/sibilant/</guid>
      <description>I was recently playing around with Sibilant, a language that is stylistically similar to Lisp and compiles to JavaScript, and figured that I would give a brief overview of some of the interesting concepts. There are a whole bunch of languages that compile to JS, and even some others that are also stylistically similar to Lisp like ClojureScript.
Getting started Let&amp;rsquo;s see some example Sibilant code and see how it compiles to get a better understanding of how it works.</description>
    </item>
    
    <item>
      <title>Review: What You Do Is Who You Are</title>
      <link>https://www.samcook.dev/blog/what-you-do/</link>
      <pubDate>Sat, 04 Jul 2020 13:00:32 -0400</pubDate>
      
      <guid>https://www.samcook.dev/blog/what-you-do/</guid>
      <description>Review What You Do Is Who You Are: How to Create Your Business Culture sets out to explore how different leaders throughout history shaped the culture of their organization and then to provide some key points from each leader that can be implemented by the reader. I picked this book up several months ago before the Corona Crisis lock down took hold in Philadelphia when I was at the library and was encouraged to grab some more books as the library would most likely soon be closing.</description>
    </item>
    
    <item>
      <title>How to use fewer Google Services (and why you may want to).</title>
      <link>https://www.samcook.dev/blog/google/google/</link>
      <pubDate>Wed, 17 Jun 2020 18:26:29 -0400</pubDate>
      
      <guid>https://www.samcook.dev/blog/google/google/</guid>
      <description>Photo by BP Miller on Unsplash 
  Google is big, so what? Google and their services have become nearly ubiquitous pieces of modern life. Between emails and video calls, navigation, smartphones, internet searching, and watching videos, one can spend nearly their entire time online using a Google service on Google hardware.
I used to use as many services as a possibly could, mostly because they are free, work incredibly well, integrate seamlessly with other services, and contained great and wide-ranging recommendations: from videos and movies to restaurants, email composition, and, of course, advertisements.</description>
    </item>
    
  </channel>
</rss>